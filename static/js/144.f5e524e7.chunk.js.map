{"version":3,"file":"static/js/144.f5e524e7.chunk.js","mappings":"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","sources":["components/products/sauces/saucesItem/SaucesItem.js","components/products/sauces/Sauces.js","components/search/Search.js"],"sourcesContent":["import { useDispatch, useSelector } from 'react-redux';\r\nimport { addProduct, changePopupBasketActivation } from \"../../../popups/popupBasket/popupBasketSlice\";\r\nimport '../sauces.scss';\r\nimport '../../../../style/style.scss';\r\n\r\nconst SaucesItem = ({ img, title, liters, price, product }) => {\r\n    \r\n    const dispatch = useDispatch();\r\n    const {products} = useSelector(state => state.popupBasket);\r\n\r\n    const button = products.find(item => item.id === title) ? <button onClick={() => dispatch(changePopupBasketActivation(true))} className=\"button button__products button__addedBasket\">Добавлено</button> : <button onClick={() => dispatch(addProduct(\r\n        [{...product, quantity: 1}]\r\n    ))} className=\"button button__products\">Выбрать</button>\r\n\r\n    const content = () => <div className=\"sauces__item\">\r\n                        <div className=\"sauces__img\"><img src={img} alt={title} /></div>\r\n                        <div className=\"sauces__info\">\r\n                            <h5 className=\"title__products\">{title}</h5>\r\n                            <div className=\"sauces__liters\">{liters}</div>\r\n                            <div className=\"sauces__bottom\">     \r\n                            {button}\r\n                            <span className=\"sauces__price\">{price} &#8381;</span></div>\r\n                        </div>\r\n                </div>\r\n    return (\r\n        <>\r\n            {content()}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SaucesItem;","import { useSelector, useDispatch } from \"react-redux\";\r\nimport { useEffect, useMemo, useRef, memo } from \"react\";\r\nimport { CSSTransition, TransitionGroup} from \"react-transition-group\";\r\n\r\nimport SaucesItem from \"./saucesItem/SaucesItem\";\r\nimport Search from \"../../search/Search\";\r\nimport { searchSauces } from \"../../search/searchSlice\";\r\nimport { addSauces } from \"./saucesSlice\";\r\nimport products from '../../../JSON/product.json';\r\n\r\n\r\nimport './sauces.scss';\r\nimport '../../../style/style.scss';\r\n\r\nconst Sauces = memo(() => {\r\n    const {sauces} = useSelector(state => state.sauces);\r\n    const {resultSauces} = useSelector(state => state.search);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(addSauces(products.sauces));\r\n        scrollToRef(myRef);\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    const scrollToRef = (ref) => {\r\n        window.scrollBy(0, ref.current.getBoundingClientRect().top - 20)\r\n    }\r\n\r\n    const myRef = useRef();\r\n    \r\n    const item = (arr) => {\r\n\r\n        if (arr.length === 0) {\r\n            return <CSSTransition key={'notFound'} timeout={300} classNames=\"fade\">\r\n                        <h5 className=\"notFound\">К сожалению, товар не найден</h5>\r\n                    </CSSTransition>\r\n        } else {\r\n        return arr.map(({id, img, title, liters, price}, i , arr) => {\r\n             return <CSSTransition key={id} timeout={300} classNames=\"fade\">\r\n                        <SaucesItem key={id} img={img} title={title} liters={liters} price={price} product={arr[i]}/>\r\n                    </CSSTransition>\r\n         });\r\n        }\r\n     };\r\n\r\n    const renderSauces = useMemo(() => {\r\n       return item(resultSauces);\r\n    }, [resultSauces]);\r\n    return (\r\n        <div ref={myRef} className=\"sauces container\">\r\n            <Search data={sauces} search={searchSauces} filters={false}/>\r\n            <div className=\"sauces__wrapper\">\r\n                    <TransitionGroup component={null}>\r\n                        {renderSauces}\r\n                    </TransitionGroup>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\nexport default Sauces;","import { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { changeFiltersVisibility } from '../popups/popupFilters/popupFiltersSlice';\r\n\r\nimport './search.scss';\r\nimport '../../style/button.scss';\r\n\r\nimport filtersImg from './icon/filters.png';\r\n\r\nconst Search = ({data, search, filters}) => {\r\n\r\n    const [value, setValue] = useState();\r\n    const dispatch = useDispatch();\r\n    const {countFilters} = useSelector(state => state.filters)\r\n\r\n    useEffect(() => {\r\n        content(value);\r\n    }, [data]);\r\n\r\n    const content = (value) => {\r\n        if (!value) {\r\n            dispatch(search(data));\r\n        } else {\r\n            const filterContent = () => { \r\n                return data.filter(item => {\r\n                const regex = new RegExp(`${value}`, \"i\");\r\n                return regex.test(item.title);\r\n            });\r\n        }\r\n        dispatch(search(filterContent()));\r\n        }\r\n    };\r\n\r\n    const onChange = (e) => {\r\n        setValue(e.target.value);\r\n        content(e.target.value);\r\n    };\r\n\r\n    const resetValue = () => {\r\n        setValue('');\r\n        content('');\r\n    };\r\n\r\n    const onFiltersVisibility = () => {\r\n        dispatch(changeFiltersVisibility(true));\r\n    };\r\n    \r\n    return (\r\n        <div className=\"search\">\r\n            <div className=\"search__wrapper\">\r\n                <div className='search__input-wrapper'><input name='search' onChange={onChange} value={value ?? ''} type=\"text\" className=\"search__input\" placeholder=\"Введите название товара\" />\r\n                {value ? <div onClick={resetValue} className='search__reset'></div> : null}\r\n                </div>\r\n                {!filters ? null : <button className='button__filters' onClick={onFiltersVisibility}>\r\n                    <div className='button__filters-img'>\r\n                        <img src={filtersImg} alt='filters' />\r\n                    </div>\r\n                    <span>Фильтры</span>\r\n                    {countFilters ? <div className=\"button__filters-count\">{countFilters}</div> : null}\r\n                </button>}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Search;"],"names":["img","title","liters","price","product","dispatch","useDispatch","button","useSelector","state","popupBasket","products","find","item","id","onClick","changePopupBasketActivation","className","addProduct","quantity","src","alt","Sauces","memo","sauces","resultSauces","search","useEffect","addSauces","scrollToRef","myRef","ref","window","scrollBy","current","getBoundingClientRect","top","useRef","renderSauces","useMemo","arr","length","CSSTransition","timeout","classNames","map","i","Search","data","searchSauces","filters","TransitionGroup","component","useState","value","setValue","countFilters","content","filter","RegExp","test","name","onChange","e","target","type","placeholder","changeFiltersVisibility","filtersImg"],"sourceRoot":""}