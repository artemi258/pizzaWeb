{"version":3,"file":"static/js/199.cfc1e654.chunk.js","mappings":"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","sources":["components/popups/popupFilters/PopupFilters.js","components/products/drinks/drinksItem/DrinksItem.js","components/products/drinks/Drinks.js","components/search/Search.js","../node_modules/classnames/index.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport classNames from \"classnames\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nimport {\r\n  changeFiltersVisibility,\r\n  countFilters,\r\n} from \"./popupFiltersSlice\";\r\n\r\nimport \"./popupFilters.scss\";\r\nimport \"../../../style/style.scss\";\r\n\r\nconst Filters = ({ filters, data, action }) => {\r\n  const dispatch = useDispatch();\r\n  const [activeFilters, setActiveFilters] = useState([]);\r\n  const [triggerFiltersApplied, setTriggerFiltersApplied] = useState(false);\r\n  const [triggerFiltersReset, setTriggerFiltersReset] = useState(false);\r\n  const { filtersVisibility } = useSelector((state) => state.filters);\r\n\r\n  const onChangeActive = (filter) => {\r\n    if (activeFilters.includes(filter)) {\r\n      setActiveFilters((state) => {\r\n        return state.filter((item) => item !== filter);\r\n      });\r\n    } else {\r\n      setActiveFilters((state) => {\r\n        return state.concat(filter);\r\n      });\r\n    }\r\n  };\r\n  const onReset = () => {\r\n    bodyOverflowVisibility();\r\n    dispatch(countFilters(null));\r\n    dispatch(changeFiltersVisibility(false));\r\n    setActiveFilters([]);\r\n    setTriggerFiltersReset(true);\r\n    dispatch(action(data));\r\n  };\r\n\r\n  useEffect(() => {\r\n    onFilteringData(activeFilters, data);\r\n  }, [data]);\r\n\r\n  const onFilteringData = (active, data) => {\r\n    dispatch(countFilters(activeFilters.length));\r\n    dispatch(changeFiltersVisibility(false));\r\n    if (active.length === 0) {\r\n      dispatch(action(data));\r\n    } else {\r\n      const res = data.filter(({ filters }) => {\r\n        const arr = [];\r\n        for (let index = 0; index < active.length; index++) {\r\n          if (filters.includes(active[index])) {\r\n            arr.push(true);\r\n          } else {\r\n            arr.push(false);\r\n          }\r\n        }\r\n        if (arr.includes(false)) {\r\n          return false;\r\n        } else {\r\n          return true;\r\n        }\r\n      });\r\n\r\n      dispatch(action(res));\r\n    }\r\n  };\r\n\r\n  const bodyOverflowHidden = () => {\r\n    let div = document.createElement(\"div\");\r\n\r\n    div.style.width = \"50px\";\r\n    div.style.height = \"50px\";\r\n    div.style.overflowY = \"scroll\";\r\n    div.style.visibility = \"hidden\";\r\n\r\n    document.body.appendChild(div);\r\n\r\n    document.body.appendChild(div);\r\n\r\n    let scrollWidth = div.offsetWidth - div.clientWidth;\r\n\r\n    div.remove();\r\n    document.querySelector(\"body\").style.marginRight = `${scrollWidth}px`;\r\n    document.querySelector(\"body\").style.overflowY = \"hidden\";\r\n  };\r\n  const bodyOverflowVisibility = () => {\r\n    document.querySelector(\"body\").style.overflowY = \"\";\r\n    document.querySelector(\"body\").style.marginRight = ``;\r\n  };\r\n\r\n  const onCloseFilters = () => {\r\n    bodyOverflowVisibility();\r\n    dispatch(changeFiltersVisibility(false));\r\n  };\r\n\r\n  const content = () => {\r\n    if (!filters || filters.length === 0) {\r\n     return <CSSTransition\r\n              in={filtersVisibility}\r\n              timeout={500}\r\n              classNames=\"visibility\"\r\n            >\r\n              <div className=\"popupFilters\">\r\n                  <h4 className=\"popupFilters__subTitle popupFilters__noFilters\">фильтров еще нет</h4>\r\n                        </div>\r\n            </CSSTransition>\r\n    } else {\r\n      return (\r\n        <CSSTransition\r\n          in={filtersVisibility}\r\n          timeout={500}\r\n          classNames=\"visibility\"\r\n        >\r\n          <div className=\"popupFilters\">\r\n            <div className=\"popupFilters__wrapper\">\r\n              <h5 className=\"popupFilters__title\">Фильтры</h5>\r\n              <div\r\n                onClick={onCloseFilters}\r\n                className=\"popupFilters__close\"\r\n              ></div>\r\n              {filters.map(({ title, filters }) => {\r\n                return (\r\n                  <div key={title} className=\"popupFilters__block\">\r\n                    <h4 className=\"popupFilters__subTitle\">{title}</h4>\r\n                    <div className=\"popupFilters__filters\">\r\n                      {filters.map((filter) => {\r\n                        const active = classNames(\"popupFilters__buttons\", {\r\n                          popupFilters__active: activeFilters.includes(filter),\r\n                        });\r\n                        return (\r\n                          <button\r\n                            onClick={() => onChangeActive(filter)}\r\n                            className={active}\r\n                            key={filter}\r\n                          >\r\n                            {filter}\r\n                          </button>\r\n                        );\r\n                      })}\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n              <div className=\"popupFilters__activation\">\r\n                <button\r\n                  disabled={activeFilters.length ? false : true}\r\n                  onClick={onReset}\r\n                  className=\"popupFilters__reset\"\r\n                >\r\n                  Сбросить\r\n                </button>\r\n                <button\r\n                  disabled={activeFilters.length ? false : true}\r\n                  onClick={() => {\r\n                    setTriggerFiltersApplied(true);\r\n                    onFilteringData(activeFilters, data);\r\n                  }}\r\n                  className=\"popupFilters__apply\"\r\n                >\r\n                  Применить\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CSSTransition>\r\n      );\r\n    }\r\n  };\r\n\r\n  const filtersApplied = () => {\r\n    return (\r\n      <CSSTransition\r\n        in={triggerFiltersApplied}\r\n        timeout={500}\r\n        classNames=\"filtersChange\"\r\n      >\r\n        <div className=\"filtersApplied\">\r\n          <span>Фильтры применены</span>\r\n        </div>\r\n      </CSSTransition>\r\n    );\r\n  };\r\n  const filtersReset = () => {\r\n    return (\r\n      <CSSTransition\r\n        in={triggerFiltersReset}\r\n        timeout={500}\r\n        classNames=\"filtersChange\"\r\n      >\r\n        <div className=\"filtersReset\">\r\n          <span>Фильтры сброшены</span>\r\n        </div>\r\n      </CSSTransition>\r\n    );\r\n  };\r\n\r\n  if (triggerFiltersApplied) {\r\n    bodyOverflowVisibility();\r\n    setTimeout(() => {\r\n      setTriggerFiltersApplied(false);\r\n    }, 5000);\r\n  }\r\n  if (triggerFiltersReset) {\r\n    setTimeout(() => {\r\n      setTriggerFiltersReset(false);\r\n    }, 5000);\r\n  }\r\n\r\n  if (filtersVisibility) {\r\n    bodyOverflowHidden();\r\n  }\r\n\r\n  const renderBackground = () => {\r\n    return (\r\n      <CSSTransition\r\n        in={filtersVisibility}\r\n        timeout={300}\r\n        classNames=\"fadeBackground\"\r\n      >\r\n        <div\r\n          onClick={onCloseFilters}\r\n          className=\"popupFilters__background\"\r\n        ></div>\r\n      </CSSTransition>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {renderBackground()}\r\n      {filtersReset()}\r\n      {filtersApplied()}\r\n      {content()}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Filters;\r\n","import classNames from 'classnames';\r\nimport { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addProduct, changePopupBasketActivation } from \"../../../popups/popupBasket/popupBasketSlice\";\r\n\r\nimport '../drinks.scss';\r\nimport '../../../../style/style.scss';\r\n\r\nconst DrinksItem = ({ img, title, liters, price, product }) => {\r\n\r\n    const [active, setActive] = useState(\"0.5 л\");\r\n    const dispatch = useDispatch();\r\n    const [backgroundActive, getBackgroundActive] = useState(0);\r\n    const [changePrice, setChangePrice] = useState(liters[0].price);\r\n    const [totalLiters, setTotalLiters] = useState(liters[0].liter)\r\n    const {products} = useSelector(state => state.popupBasket);\r\n\r\n    const content = () => {\r\n                switch (Array.isArray(liters)) {\r\n                    case true:\r\n         return <div className=\"drinks__item\">\r\n                        <div className=\"drinks__img\"><img src={img} alt={title} /></div>\r\n                        <div className=\"drinks__info\">\r\n                            <h5 className=\"title__products\">{title}</h5>\r\n                            <div className=\"drinks__liters\">\r\n                                <div className=\"drinks__active\" style={{left: `${backgroundActive}px`}}></div>\r\n                                {liters.map(({liter, price}) => {\r\n                                        const classes = classNames(\"drinks__liters-item\", {\"drinks__liters-active\": active === liter});\r\n                                    return <div onClick={e => {\r\n                                        setTotalLiters(liter)\r\n                                        setChangePrice(price);\r\n                                        setActive(liter);\r\n                                        getBackgroundActive(e.target.offsetLeft)\r\n                                    }} key={liter} className={classes}>{liter}</div>\r\n                                })}\r\n                            </div>\r\n                            <div className=\"drinks__bottom\">\r\n                                \r\n                            {products.find(item => item.id === title) ? <button onClick={() => dispatch(changePopupBasketActivation(true))} className=\"button button__products button__addedBasket\">Добавлено</button> : <button onClick={() => dispatch(addProduct(\r\n                                [{...product, liters: totalLiters, quantity: 1, price: changePrice}]\r\n                            ))} className=\"button button__products\">Выбрать</button>}\r\n                            <span className=\"drinks__price\" key={Math.random()}>{changePrice} &#8381;</span></div>\r\n                        </div>\r\n                </div>\r\n                    case false:\r\n         return <div className=\"drinks__item\">\r\n                        <div className=\"drinks__img\"><img src={img} alt={title} /></div>\r\n                        <div className=\"drinks__info\">\r\n                            <h5 className=\"title__products\">{title}</h5>\r\n                            <div className=\"drinks__liters drinks__liters-noChange\">{liters}</div>\r\n                            <div className=\"drinks__bottom\">\r\n                            {products.find(item => item.id === title) ? <button onClick={() => dispatch(changePopupBasketActivation(true))} className=\"button button__products button__addedBasket\">Добавлено</button> : <button onClick={() => dispatch(addProduct(\r\n                                [{...product, quantity: 1}]\r\n                            ))} className=\"button button__products\">Выбрать</button>}\r\n                            <span className=\"drinks__price\">{price} &#8381;</span></div>\r\n                        </div>\r\n                </div>\r\n                    default:\r\n                        break;\r\n                }\r\n    }\r\n    return (\r\n        <>\r\n            {content()}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DrinksItem;","import { useSelector, useDispatch } from \"react-redux\";\r\nimport { useEffect, useMemo, memo, useRef } from \"react\";\r\nimport { CSSTransition, TransitionGroup} from \"react-transition-group\";\r\n\r\nimport DrinksItem from \"./drinksItem/DrinksItem\";\r\nimport Search from \"../../search/Search\";\r\nimport Filters from \"../../popups/popupFilters/PopupFilters\";\r\nimport { searchDrinks } from \"../../search/searchSlice\";\r\nimport { filteringDrinks } from \"../../popups/popupFilters/popupFiltersSlice\";\r\nimport { addDrinks } from \"./drinksSlice\";\r\nimport products from '../../../JSON/product.json';\r\n\r\nimport './drinks.scss';\r\nimport '../../../style/style.scss';\r\n\r\nconst Drinks = memo(() => {\r\n    const {drinks} = useSelector(state => state.drinks);\r\n    const {resultDrinks} = useSelector(state => state.search)\r\n    const {filters, resultFilteringDrinks} = useSelector(state => state.filters)\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(addDrinks(products.drinks));\r\n        scrollToRef(myRef);\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    const scrollToRef = (ref) => {\r\n\r\n        window.scrollBy(0, ref.current.getBoundingClientRect().top - 20)\r\n    }\r\n    const myRef = useRef();\r\n\r\n    const item = (arr) => {\r\n        if (arr.length === 0) {\r\n            return <CSSTransition key={'notFound'} timeout={300} classNames=\"fade\">\r\n                        <h5 className=\"notFound\">К сожалению, товар не найден</h5>\r\n                    </CSSTransition>\r\n        } else {\r\n            return arr.map(({id, img, title, liters, price}, i , arr) => {\r\n                return <CSSTransition key={id} timeout={300} classNames=\"fade\">\r\n                           <DrinksItem key={id} img={img} title={title} liters={liters} price={price} product={arr[i]}/>\r\n                       </CSSTransition>\r\n            });\r\n        }\r\n     };\r\n\r\n    const renderDrinks = useMemo(() => {\r\n       return item(resultFilteringDrinks);\r\n    }, [resultFilteringDrinks]);\r\n\r\n    const drinksFilters = () => { \r\n        const item = filters.filter(product => Object.keys(product).includes('drinks'));\r\n        const res = item.map(item => {\r\n            return item.drinks;\r\n        })\r\n        return res[0];\r\n}\r\n\r\n    return (\r\n        <div ref={myRef} className=\"drinks container\">\r\n            <Filters filters={drinksFilters()} data={resultDrinks} action={filteringDrinks}/>\r\n            <Search data={drinks} search={searchDrinks} filters={true}/>\r\n            <div className=\"drinks__wrapper\">\r\n                    <TransitionGroup component={null}>\r\n                        {renderDrinks}\r\n                    </TransitionGroup>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\nexport default Drinks","import { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { changeFiltersVisibility } from '../popups/popupFilters/popupFiltersSlice';\r\n\r\nimport './search.scss';\r\nimport '../../style/button.scss';\r\n\r\nimport filtersImg from './icon/filters.png';\r\n\r\nconst Search = ({data, search, filters}) => {\r\n\r\n    const [value, setValue] = useState();\r\n    const dispatch = useDispatch();\r\n    const {countFilters} = useSelector(state => state.filters)\r\n\r\n    useEffect(() => {\r\n        content(value);\r\n    }, [data]);\r\n\r\n    const content = (value) => {\r\n        if (!value) {\r\n            dispatch(search(data));\r\n        } else {\r\n            const filterContent = () => { \r\n                return data.filter(item => {\r\n                const regex = new RegExp(`${value}`, \"i\");\r\n                return regex.test(item.title);\r\n            });\r\n        }\r\n        dispatch(search(filterContent()));\r\n        }\r\n    };\r\n\r\n    const onChange = (e) => {\r\n        setValue(e.target.value);\r\n        content(e.target.value);\r\n    };\r\n\r\n    const resetValue = () => {\r\n        setValue('');\r\n        content('');\r\n    };\r\n\r\n    const onFiltersVisibility = () => {\r\n        dispatch(changeFiltersVisibility(true));\r\n    };\r\n    \r\n    return (\r\n        <div className=\"search\">\r\n            <div className=\"search__wrapper\">\r\n                <div className='search__input-wrapper'><input name='search' onChange={onChange} value={value ?? ''} type=\"text\" className=\"search__input\" placeholder=\"Введите название товара\" />\r\n                {value ? <div onClick={resetValue} className='search__reset'></div> : null}\r\n                </div>\r\n                {!filters ? null : <button className='button__filters' onClick={onFiltersVisibility}>\r\n                    <div className='button__filters-img'>\r\n                        <img src={filtersImg} alt='filters' />\r\n                    </div>\r\n                    <span>Фильтры</span>\r\n                    {countFilters ? <div className=\"button__filters-count\">{countFilters}</div> : null}\r\n                </button>}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Search;","/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString === Object.prototype.toString) {\n\t\t\t\t\tfor (var key in arg) {\n\t\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n"],"names":["filters","data","action","dispatch","useDispatch","useState","activeFilters","setActiveFilters","triggerFiltersApplied","setTriggerFiltersApplied","triggerFiltersReset","setTriggerFiltersReset","filtersVisibility","useSelector","state","onReset","bodyOverflowVisibility","countFilters","changeFiltersVisibility","useEffect","onFilteringData","active","length","res","filter","arr","index","includes","push","document","querySelector","style","overflowY","marginRight","onCloseFilters","setTimeout","div","createElement","width","height","visibility","body","appendChild","scrollWidth","offsetWidth","clientWidth","remove","bodyOverflowHidden","CSSTransition","in","timeout","classNames","onClick","className","map","title","popupFilters__active","item","concat","onChangeActive","disabled","img","liters","price","product","setActive","backgroundActive","getBackgroundActive","changePrice","setChangePrice","liter","totalLiters","setTotalLiters","products","popupBasket","Array","isArray","src","alt","left","classes","e","target","offsetLeft","find","id","changePopupBasketActivation","addProduct","quantity","Math","random","content","Drinks","memo","drinks","resultDrinks","search","resultFilteringDrinks","addDrinks","scrollToRef","myRef","ref","window","scrollBy","current","getBoundingClientRect","top","useRef","renderDrinks","useMemo","i","Object","keys","drinksFilters","filteringDrinks","Search","searchDrinks","TransitionGroup","component","value","setValue","RegExp","test","name","onChange","type","placeholder","filtersImg","hasOwn","hasOwnProperty","arguments","arg","argType","inner","apply","toString","prototype","key","call","join","module","exports","default"],"sourceRoot":""}